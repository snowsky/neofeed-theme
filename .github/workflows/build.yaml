name: Build and Deploy

on:
  schedule:
    - cron: '42 13 * * *'
  push:
    branches:
      - master

env:
  TOKEN: ${{ secrets.GITHUB_TOKEN }}
  HUGO_ARGS: "--minify --environment production"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🛎 Check out master
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: 🚧 Check for configuration file
        run: |
          if [ -f "./config.toml" ]; then
              echo "CONFIG_EXISTS=1" >> $GITHUB_ENV
              echo "Hugo TOML configuration file found."
          elif [ -f "./config.yaml" ]; then
              echo "CONFIG_EXISTS=1" >> $GITHUB_ENV
              echo "Hugo YAML configuration file found."
          elif [ -f "./config.json" ]; then
              echo "CONFIG_EXISTS=1" >> $GITHUB_ENV
              echo "Hugo JSON configuration file found."
          else
              echo "🛑 No valid Hugo configuration file found."
          fi
      # Build and push the generated site to the repository
      - name: 🚀 Build and deploy to GitHub Pages
        run: |
          #!/bin/bash
          set -x

          # Fail if variables are unset
          set -eu -o pipefail

          echo '🔧 Install tools'
          npm init -y && npm install -y postcss-cli autoprefixer

          echo '🤵 Install Hugo'
          HUGO_VERSION=$(curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest | jq -r '.tag_name')
          mkdir tmp/ && cd tmp/
          curl -sSL https://github.com/gohugoio/hugo/releases/download/${HUGO_VERSION}/hugo_${HUGO_VERSION: -7}_Linux-64bit.tar.gz | tar -xvzf-
          mv hugo /usr/local/bin/
          cd .. && rm -rf tmp/
          cd ${GITHUB_WORKSPACE}
          hugo version || exit 1

          echo '🧹 Clean site'
          if [ -d "${DEST:-"docs"}" ]; then
              rm -rf ${DEST:-"docs"}/*
          fi

          echo '🍳 Build site'
          hugo ${HUGO_ARGS:-""} -d ${DEST:-"docs"}

          echo '🚀 Deploy build'
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add .
          git commit -am "🚀 Deploy with ${GITHUB_WORKFLOW}"
          git push --all -f https://${TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        if: env.CONFIG_EXISTS
      # And deploy to Neocities
      - name: 🐈 Deploy to Neocities
        uses: bcomnes/deploy-to-neocities@master
#         if: ${{ env.NEOCITIES_API_TOKEN }}
        with:
          api_token: ${{ secrets.NEOCITIES_API_TOKEN }}
          cleanup: false
          dist_dir: docs
